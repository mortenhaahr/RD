@video{accuconferenceAutomaticSourceCode2017,
  entrysubtype = {video},
  title = {Automatic {{C}}++ Source Code Generation with Clang - {{Sergei Sadovnikov}} [{{ACCU}} 2017]},
  editor = {{ACCU Conference}},
  editortype = {director},
  date = {2017},
  url = {https://www.youtube.com/watch?v=aPTyatTI42k},
  urldate = {2023-02-01}
}

@online{alonStructuralLanguageModels2020,
  title = {Structural {{Language Models}} of {{Code}}},
  author = {Alon, Uri and Sadaka, Roy and Levy, Omer and Yahav, Eran},
  date = {2020-07-29},
  eprint = {1910.00577},
  eprinttype = {arxiv},
  eprintclass = {cs, stat},
  url = {http://arxiv.org/abs/1910.00577},
  urldate = {2023-01-31},
  abstract = {We address the problem of any-code completion – generating a missing piece of source code in a given program without any restriction on the vocabulary or structure. We introduce a new approach to any-code completion that leverages the strict syntax of programming languages to model a code snippet as a tree –structural language modeling (SLM). SLM estimates the probability of the program’s abstract syntax tree (AST) by decomposing it into a product of conditional probabilities over its nodes. We present a neural model that computes these conditional probabilities by considering all AST paths leading to a target node. Unlike previous techniques that have severely restricted the kinds of expressions that can be generated in this task, our approach can generate arbitrary code in any programming language. Our model significantly outperforms both seq2seq and a variety of structured approaches in generating Java and C\# code. Our code, data, and trained models are available at http://github.com/tech-srl/ slm-code-generation/. An online demo is available at http://AnyCodeGen.org.},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Machine Learning,Computer Science - Programming Languages,Statistics - Machine Learning},
  note = {Comment: Appeared in ICML'2020}
}

@online{asafHowExtractComments2014,
  type = {Forum post},
  title = {How to Extract Comments and Match to Declaration with {{RecursiveASTVisitor}} in Libclang C++?},
  author = {Asaf},
  date = {2014-08-12},
  url = {https://stackoverflow.com/q/25275212},
  urldate = {2023-02-10},
  organization = {{Stack Overflow}}
}

@incollection{barrAutomaticProgramming1982,
  title = {Automatic {{Programming}}},
  booktitle = {The {{Handbook}} of {{Artificial Intelligence}}},
  author = {Barr, Avron and Feigenbaum, Edward A.},
  date = {1982},
  volume = {1},
  pages = {295--379},
  publisher = {{Elsevier}},
  doi = {10.1016/B978-0-86576-090-5.50010-0},
  url = {https://linkinghub.elsevier.com/retrieve/pii/B9780865760905500100},
  urldate = {2023-01-31},
  isbn = {978-0-86576-090-5},
  langid = {english}
}

@software{bloombergClangmetatoolFrameworkReusing2023,
  title = {Clang-Metatool - {{A}} Framework for Reusing Code in Clang Tools},
  author = {Bloomberg},
  date = {2023-05-04T03:39:04Z},
  origdate = {2018-06-26T21:51:44Z},
  url = {https://github.com/bloomberg/clangmetatool},
  urldate = {2023-05-04},
  abstract = {A framework for reusing code in Clang tools},
  organization = {{Bloomberg}},
  keywords = {clang}
}

@online{chenEvaluatingLargeLanguage2021,
  title = {Evaluating {{Large Language Models Trained}} on {{Code}}},
  author = {Chen, Mark and Tworek, Jerry and Jun, Heewoo and Yuan, Qiming and Pinto, Henrique Ponde de Oliveira and Kaplan, Jared and Edwards, Harri and Burda, Yuri and Joseph, Nicholas and Brockman, Greg and Ray, Alex and Puri, Raul and Krueger, Gretchen and Petrov, Michael and Khlaaf, Heidy and Sastry, Girish and Mishkin, Pamela and Chan, Brooke and Gray, Scott and Ryder, Nick and Pavlov, Mikhail and Power, Alethea and Kaiser, Lukasz and Bavarian, Mohammad and Winter, Clemens and Tillet, Philippe and Such, Felipe Petroski and Cummings, Dave and Plappert, Matthias and Chantzis, Fotios and Barnes, Elizabeth and Herbert-Voss, Ariel and Guss, William Hebgen and Nichol, Alex and Paino, Alex and Tezak, Nikolas and Tang, Jie and Babuschkin, Igor and Balaji, Suchir and Jain, Shantanu and Saunders, William and Hesse, Christopher and Carr, Andrew N. and Leike, Jan and Achiam, Josh and Misra, Vedant and Morikawa, Evan and Radford, Alec and Knight, Matthew and Brundage, Miles and Murati, Mira and Mayer, Katie and Welinder, Peter and McGrew, Bob and Amodei, Dario and McCandlish, Sam and Sutskever, Ilya and Zaremba, Wojciech},
  date = {2021-07-14},
  eprint = {2107.03374},
  eprinttype = {arxiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/2107.03374},
  urldate = {2023-01-31},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Machine Learning},
  note = {Comment: corrected typos, added references, added authors, added acknowledgements}
}

@online{clangASTMatcherReference,
  title = {{{AST Matcher Reference}}},
  author = {Clang},
  url = {https://clang.llvm.org/docs/LibASTMatchersReference.html},
  urldate = {2023-02-07}
}

@software{clangClangFormatClangFormat2023,
  title = {Clang {{Format}} - {{ClangFormat}}.Cpp - {{GitHub}}},
  author = {Clang},
  date = {2023-04-03T10:22:30Z},
  origdate = {2016-12-07T09:39:33Z},
  url = {https://github.com/llvm/llvm-project/blob/db3dcdc08ce06e301cdcc75e2849315a47d7a28d/clang/tools/clang-format/ClangFormat.cpp},
  urldate = {2023-04-03},
  organization = {{Clang}}
}

@online{clangClangLanguageFamily,
  title = {Clang {{C Language Family Frontend}} for {{LLVM}}},
  author = {Clang},
  url = {https://clang.llvm.org/},
  urldate = {2023-04-03}
}

@online{clangClangPluginsClang,
  title = {Clang {{Plugins}} — {{Clang}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/docs/ClangPlugins.html},
  urldate = {2023-05-29}
}

@online{clangClangTidyExtraClang,
  title = {Clang-{{Tidy}} — {{Extra Clang Tools}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/extra/clang-tidy/},
  urldate = {2023-05-29}
}

@online{clangClangTransformerTutorial,
  title = {Clang {{Transformer Tutorial}} — {{Clang}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/docs/ClangTransformerTutorial.html},
  urldate = {2023-02-08}
}

@online{clangExternalClangExamples,
  title = {External {{Clang Examples}} — {{Clang}} 17.0.0git Documentation},
  author = {Clang},
  url = {https://clang.llvm.org/docs/ExternalClangExamples.html},
  urldate = {2023-02-23}
}

@online{clangHowWriteRecursiveASTVisitor,
  title = {How to Write {{RecursiveASTVisitor}} Based {{ASTFrontendActions}}. — {{Clang}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/docs/RAVFrontendAction.html},
  urldate = {2023-03-17}
}

@online{clangIntroductionClangAST,
  title = {Introduction to the {{Clang AST}} — {{Clang}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/docs/IntroductionToTheClangAST.html},
  urldate = {2023-04-03}
}

@online{clangJSONCompilationDatabase,
  title = {{{JSON Compilation Database Format Specification}} — {{Clang}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/docs/JSONCompilationDatabase.html},
  urldate = {2023-02-16}
}

@online{clangMatchingClangAST,
  title = {Matching the {{Clang AST}} — {{Clang}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/docs/LibASTMatchers.html},
  urldate = {2023-02-08}
}

@software{clangRangeSelectorLibraryLibTooling2023,
  title = {The {{RangeSelector}} Library in {{LibTooling}}},
  author = {Clang},
  date = {2023-06-03T09:19:15Z},
  origdate = {2016-12-07T09:39:33Z},
  url = {https://github.com/llvm/llvm-project/blob/main/clang/include/clang/Tooling/Transformer/RangeSelector.h},
  urldate = {2023-06-03},
  organization = {{Clang}}
}

@software{clangStencilLibraryLibTooling2023,
  title = {The {{Stencil}} Library in {{LibTooling}}},
  author = {Clang},
  date = {2023-06-03T09:19:15Z},
  origdate = {2016-12-07T09:39:33Z},
  url = {https://github.com/llvm/llvm-project/blob/main/clang/include/clang/Tooling/Transformer/Stencil.h},
  urldate = {2023-06-03},
  organization = {{Clang}}
}

@online{clangTutorialBuildingTools,
  title = {Tutorial for Building Tools Using {{LibTooling}} and {{LibASTMatchers}} — {{Clang}} 17.0.0git Documentation},
  author = {{Clang}},
  url = {https://clang.llvm.org/docs/LibASTMatchersTutorial.html},
  urldate = {2023-02-02}
}

@online{clangWelcomeClangDocumentation,
  title = {Welcome to {{Clang}}'s Documentation! — {{Clang}} 17.0.0git Documentation},
  author = {Clang},
  url = {https://clang.llvm.org/docs/index.html},
  urldate = {2023-04-03}
}

@online{cmakeCmakegeneratorsCMake26,
  title = {Cmake-Generators(7) — {{CMake}} 3.26.0 {{Documentation}}},
  author = {{CMake}},
  url = {https://cmake.org/cmake/help/latest/manual/cmake-generators.7.html#cmake-generators},
  urldate = {2023-03-16}
}

@online{columbiauniversityCOMSW4115Programming,
  title = {{{COMS W4115 Programming Languages}} and {{Translators}}},
  author = {Columbia university},
  url = {http://www.cs.columbia.edu/~aho/cs4115/},
  urldate = {2023-02-03}
}

@video{cppconUsingClangLibASTMatchers2022,
  entrysubtype = {video},
  title = {Using {{Clang LibASTMatchers}} for {{Compliance}} in {{Codebases}} - {{Jonah Jolley}} - {{CppCon}} 2021},
  editor = {{CppCon}},
  editortype = {director},
  date = {2022-03-14},
  url = {https://www.youtube.com/watch?v=icvNkYextOo},
  urldate = {2023-02-01}
}

@online{cppreferencePointerDeclarationCppreference,
  title = {Pointer Declaration - Cppreference.Com},
  author = {Cppreference},
  url = {https://en.cppreference.com/w/cpp/language/pointer},
  urldate = {2023-05-27}
}

@online{cppreferenceStdArrayCppreference,
  title = {Std::Array - Cppreference.Com},
  author = {Cppreference},
  url = {https://en.cppreference.com/w/cpp/container/array},
  urldate = {2023-05-26}
}

@online{cppreferenceUndefinedBehaviorCppreference,
  title = {Undefined Behavior - Cppreference.Com},
  author = {Cppreference},
  url = {https://en.cppreference.com/w/cpp/language/ub},
  urldate = {2023-02-28}
}

@software{facebookFollyFacebookOpensource2023,
  title = {Folly: {{Facebook Open-source Library}}},
  shorttitle = {Folly},
  author = {Facebook},
  date = {2023-06-02T14:13:54Z},
  origdate = {2012-06-01T20:49:04Z},
  url = {https://github.com/facebook/folly},
  urldate = {2023-06-02},
  abstract = {An open-source C++ library developed and used at Facebook.},
  organization = {{Meta}}
}

@online{gnuGNULibrary,
  title = {The {{GNU C}}++ {{Library}}},
  author = {GNU},
  url = {https://gcc.gnu.org/onlinedocs/libstdc++/},
  urldate = {2023-02-28}
}

@online{goldsboroughEmittingDiagnosticsClang,
  title = {Emitting {{Diagnostics}} in {{Clang}}},
  author = {Goldsborough, Peter},
  url = {http://www.goldsborough.me/c++/clang/llvm/tools/2017/02/24/00-00-06-emitting_diagnostics_and_fixithints_in_clang_tools/},
  urldate = {2023-03-09},
  abstract = {Musings on navigating the tech bubble with philosophy and self-improvement.},
  organization = {{Peter Goldsborough}}
}

@unpublished{gribenkoParsingDocumentationComments2012,
  title = {Parsing {{Documentation Comments}} in {{Clang}}},
  author = {Gribenko, Dmitri},
  date = {2012-11-08},
  url = {https://llvm.org/devmtg/2012-11/Gribenko_CommentParsing.pdf},
  eventtitle = {{{LLVM Developers}}’ {{Meeting}}},
  langid = {english}
}

@online{guoContentEnhancedBERTbased2020,
  title = {Content {{Enhanced BERT-based Text-to-SQL Generation}}},
  author = {Guo, Tong and Gao, Huilin},
  date = {2020-04-21},
  eprint = {1910.07179},
  eprinttype = {arxiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/1910.07179},
  urldate = {2023-01-31},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Computation and Language},
  note = {Comment: working in progress}
}

@online{ibmIBMDocumentation2021,
  title = {{{IBM Documentation}}},
  author = {IBM},
  date = {2021-04-14},
  url = {https://ibm.com/docs/en/i/7.3?topic=linkage-name-mangling-c-only},
  urldate = {2023-02-28},
  abstract = {IBM Documentation.},
  langid = {american}
}

@online{isaaccomputerscienceTranslators,
  title = {Translators},
  author = {Isaac Computer Science},
  url = {https://isaaccomputerscience.org/topics/translators},
  urldate = {2023-02-03},
  abstract = {The free online learning platform for GCSE and A level Computer Science students and teachers. Discover our computer science revision and homework questions today.},
  langid = {english},
  organization = {{Isaac Computer Science}}
}

@online{johnmaedaChoosingLLMModel2023,
  title = {Choosing an {{LLM Model}}},
  author = {Johnmaeda},
  date = {2023-05-23},
  url = {https://learn.microsoft.com/en-us/semantic-kernel/prompt-engineering/llm-models},
  urldate = {2023-05-29},
  abstract = {Determine which LLM model is best for your prompt engineering needs},
  langid = {american}
}

@inproceedings{jorgensenCodeGenerationPlatform2015,
  title = {A {{Code Generation Platform}} for {{VDM}}},
  booktitle = {Proceedings of the 12th Overture Workshop},
  author = {Jørgensen, Peter Würtz Vinther and Larsen, Morten and Couto, Luis Diogo Monteiro Duarte},
  editor = {Battle, Nick and Fitzgerald, John},
  date = {2015-01},
  series = {University of Newcastle-upon-Tyne. {{Computing}} Science. {{Technical}} Report Series},
  volume = {CS-TR-1446},
  publisher = {{University of Newcastle Upon Tyne}},
  langid = {english},
  note = {Note: Relevante artikel kan findes på side 122}
}

@software{kasmisClangOutoftreeBuild2023,
  title = {Clang Out-of-Tree Build},
  author = {Kasmis, Firat},
  date = {2023-01-28T12:55:04Z},
  origdate = {2016-11-01T12:57:08Z},
  url = {https://github.com/firolino/clang-tool},
  urldate = {2023-02-28},
  abstract = {Simple and powerful standalone project for clang-based tools using libtooling (e.g. refactoring, auto-completion, etc.)},
  keywords = {clang,code-completion,libtooling,refactoring,standalone,static-code-analysis}
}

@software{kristensenMortenhaahrRD2023,
  title = {Mortenhaahr/{{RD}}},
  author = {Kristensen, Morten Haahr},
  date = {2023-02-23T10:17:49Z},
  origdate = {2023-01-31T12:28:26Z},
  url = {https://github.com/mortenhaahr/RD},
  urldate = {2023-02-23}
}

@inproceedings{legouesSystematicStudyAutomated2012,
  title = {A Systematic Study of Automated Program Repair: {{Fixing}} 55 out of 105 Bugs for \$8 Each},
  shorttitle = {A Systematic Study of Automated Program Repair},
  booktitle = {2012 34th {{International Conference}} on {{Software Engineering}} ({{ICSE}})},
  author = {Le Goues, Claire and Dewey-Vogt, Michael and Forrest, Stephanie and Weimer, Westley},
  date = {2012-06},
  pages = {3--13},
  publisher = {{IEEE}},
  location = {{Zurich}},
  doi = {10.1109/ICSE.2012.6227211},
  url = {http://ieeexplore.ieee.org/document/6227211/},
  urldate = {2023-01-31},
  eventtitle = {2012 34th {{International Conference}} on {{Software Engineering}} ({{ICSE}} 2012)},
  isbn = {978-1-4673-1066-6 978-1-4673-1067-3},
  langid = {english}
}

@online{lichessChessBoardEditor,
  title = {Chess Board Editor},
  author = {Lichess},
  url = {https://lichess.org/editor},
  urldate = {2023-02-25},
  abstract = {Load opening positions or create your own chess position on a chess board editor},
  langid = {american},
  organization = {{lichess.org}}
}

@inproceedings{lingLatentPredictorNetworks2016,
  title = {Latent {{Predictor Networks}} for {{Code Generation}}},
  booktitle = {Proceedings of the 54th {{Annual Meeting}} of the {{Association}} for {{Computational Linguistics}} ({{Volume}} 1: {{Long Papers}})},
  author = {Ling, Wang and Blunsom, Phil and Grefenstette, Edward and Hermann, Karl Moritz and Kočiský, Tomáš and Wang, Fumin and Senior, Andrew},
  date = {2016},
  pages = {599--609},
  publisher = {{Association for Computational Linguistics}},
  location = {{Berlin, Germany}},
  doi = {10.18653/v1/P16-1057},
  url = {http://aclweb.org/anthology/P16-1057},
  urldate = {2023-01-31},
  abstract = {Many language generation tasks require the production of text conditioned on both structured and unstructured inputs. We present a novel neural network architecture which generates an output sequence conditioned on an arbitrary number of input functions. Crucially, our approach allows both the choice of conditioning context and the granularity of generation, for example characters or tokens, to be marginalised, thus permitting scalable and effective training. Using this framework, we address the problem of generating programming code from a mixed natural language and structured specification. We create two new data sets for this paradigm derived from the collectible trading card games Magic the Gathering and Hearthstone. On these, and a third preexisting corpus, we demonstrate that marginalising multiple predictors allows our model to outperform strong benchmarks.},
  eventtitle = {Proceedings of the 54th {{Annual Meeting}} of the {{Association}} for {{Computational Linguistics}} ({{Volume}} 1: {{Long Papers}})},
  langid = {english}
}

@online{llvmLibToolingClang17,
  title = {{{LibTooling}} — {{Clang}} 17.0.0git Documentation},
  author = {LLVM},
  url = {https://clang.llvm.org/docs/LibTooling.html},
  urldate = {2023-02-23}
}

@online{llvmLLVMCompilerInfrastructure,
  title = {The {{LLVM Compiler Infrastructure Project}}},
  author = {LLVM},
  url = {https://llvm.org/},
  urldate = {2023-04-03}
}

@software{llvmLLVMCompilerInfrastructure2023,
  title = {The {{LLVM Compiler Infrastructure}} - {{GitHub}}},
  author = {LLVM},
  date = {2023-04-03T10:22:30Z},
  origdate = {2016-12-07T09:39:33Z},
  url = {https://github.com/llvm/llvm-project},
  urldate = {2023-04-03},
  abstract = {The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. Note: the repository does not accept github pull requests at this moment. Please submit your patches at http://reviews.llvm.org.},
  organization = {{LLVM}}
}

@software{lohmannJSONModern2022,
  title = {{{JSON}} for {{Modern C}}++},
  author = {Lohmann, Niels},
  date = {2022-08},
  origdate = {2013-07-04T08:47:49Z},
  url = {https://github.com/nlohmann},
  urldate = {2023-05-11},
  abstract = {JSON for Modern C++},
  version = {3.11.2}
}

@online{microsoftRunTimeTypeInformation2021,
  title = {Run-{{Time Type Information}}},
  author = {Microsoft},
  date = {2021-08-03},
  url = {https://learn.microsoft.com/en-us/cpp/cpp/run-time-type-information},
  urldate = {2023-02-28},
  abstract = {Learn more about: Run-Time Type Information},
  langid = {american}
}

@online{mitreCWE2022CWE,
  title = {{{CWE}} - 2022 {{CWE Top}} 25 {{Most Dangerous Software Weaknesses}}},
  author = {Mitre},
  url = {https://cwe.mitre.org/top25/archive/2022/2022_cwe_top25.html},
  urldate = {2023-05-26}
}

@online{nexttechnologyprofessionalsMostPopularProgramming2022,
  title = {The Most Popular Programming Languages in 2023},
  author = {Next Technology Professionals},
  date = {2022-12-21},
  url = {https://nexttechnology.io/the-most-popular-programming-languages-in-2023/},
  urldate = {2023-06-02},
  abstract = {What are the most popular programming languages in 2023? If you want to enter the IT industry or start learning a new language, this article will be useful.},
  langid = {american},
  organization = {{Next Technology Professionals}}
}

@online{nitacademyWhereUsedIndustry2021,
  title = {Where Is {{C}}++ Used in the Industry?},
  author = {NIT Academy},
  date = {2021-12-14T21:31:57+00:00},
  url = {https://academy.nit-institute.com/where-is-c-used-in-the-industry/},
  urldate = {2023-06-02},
  abstract = {The history of C++ starts with the C programming language that was first developed between […]},
  langid = {american},
  organization = {{academy.nit-institute.com}}
}

@online{novakjr.CS394PAutomatic,
  title = {{{CS 394P}}: {{Automatic Programming}} p. 2},
  author = {Novak Jr., Gordon S.},
  url = {https://www.cs.utexas.edu/users/novak/cs394p2.html},
  urldate = {2023-04-03},
  organization = {{The University of Texas at Austin}}
}

@unpublished{sadovnikovUsingClangSource,
  title = {Using {{Clang}} for Source Code Generation},
  author = {Sadovnikov, Sergei},
  url = {https://accu.org/conf-docs/PDFs_2017/Sergei_Sadovnikov_-_Clang_source_code_generation_tool_slides.pdf},
  langid = {english}
}

@online{stmSTM32CubeDevelopmentSoftware,
  title = {{{STM32Cube Development Software}} - {{STM32 Open Development Environment}} - {{STMicroelectronics}}},
  author = {{STM}},
  url = {https://www.st.com/en/ecosystems/stm32cube.html},
  urldate = {2023-05-29},
  abstract = {With STM32Cube development software, STMicroelectronics provides a comprehensive software tool, significantly reducing development efforts, time and cost.},
  langid = {english}
}

@online{stmSTMicroelectronicsOurTechnology,
  title = {{{STMicroelectronics}}: {{Our}} Technology Starts with You},
  shorttitle = {{{STMicroelectronics}}},
  author = {{STM}},
  url = {https://www.st.com/content/st_com/en.html},
  urldate = {2023-05-29},
  abstract = {ST is a global high-tech company creating semiconductor technologies for a smarter, greener, and more sustainable future},
  langid = {english}
}

@online{stroustrupCoreGuidelines,
  title = {C++ {{Core Guidelines}}},
  author = {Stroustrup, Bjarne and Sutter, Herb},
  url = {https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Res-stack},
  urldate = {2023-03-03}
}

@online{swarnimProblemsPainsParsing,
  title = {Problems \& Pains in Parsing: A Story of Lexer-Hack - {{DeepSource}}},
  shorttitle = {Problems \& Pains in Parsing},
  author = {Swarnim},
  url = {https://deepsource.com/blog/problems-and-pains-in-parsing},
  urldate = {2023-05-29},
  abstract = {When languages take over the world.},
  langid = {english}
}

@online{visualparadigmUMLCodeGeneration,
  title = {{{UML}}/{{Code Generation Software}}},
  author = {{Visual Paradigm}},
  url = {https://www.visual-paradigm.com/features/code-engineering-tools/},
  urldate = {2023-04-03}
}

@online{woockashekDifferenceConstStd2022,
  type = {Forum post},
  title = {Difference between Const Std::array{$<$}{{T}},{{N}}{$>$} and Std::Array{$<$}const {{T}}, {{N}}{$>$}},
  shorttitle = {Difference between Const Std},
  author = {Woockashek},
  date = {2022-01-22},
  url = {https://stackoverflow.com/q/70803002},
  urldate = {2023-03-13},
  organization = {{Stack Overflow}}
}

@inproceedings{yinSyntacticNeuralModel2017,
  title = {A {{Syntactic Neural Model}} for {{General-Purpose Code Generation}}},
  booktitle = {Proceedings of the 55th {{Annual Meeting}} of the {{Association}} for           {{Computational Linguistics}} ({{Volume}} 1: {{Long Papers}})},
  author = {Yin, Pengcheng and Neubig, Graham},
  date = {2017},
  pages = {440--450},
  publisher = {{Association for Computational Linguistics}},
  location = {{Vancouver, Canada}},
  doi = {10.18653/v1/P17-1041},
  url = {http://aclweb.org/anthology/P17-1041},
  urldate = {2023-01-31},
  abstract = {We consider the problem of parsing natural language descriptions into source code written in a general-purpose programming language like Python. Existing datadriven methods treat this problem as a language generation task without considering the underlying syntax of the target programming language. Informed by previous work in semantic parsing, in this paper we propose a novel neural architecture powered by a grammar model to explicitly capture the target syntax as prior knowledge. Experiments find this an effective way to scale up to generation of complex programs from natural language descriptions, achieving state-of-the-art results that well outperform previous code generation and semantic parsing approaches.},
  eventtitle = {Proceedings of the 55th {{Annual Meeting}} of the {{Association}} for           {{Computational Linguistics}} ({{Volume}} 1: {{Long Papers}})},
  langid = {english}
}

@online{zdnetWhatChatGPTWhy,
  title = {What Is {{ChatGPT}} and Why Does It Matter? {{Here}}'s What You Need to Know},
  shorttitle = {What Is {{ChatGPT}} and Why Does It Matter?},
  author = {Zdnet},
  url = {https://www.zdnet.com/article/what-is-chatgpt-and-why-does-it-matter-heres-everything-you-need-to-know/},
  urldate = {2023-05-29},
  abstract = {Updated: This AI chatbot's advanced conversational capabilities have generated quite the buzz. We answer your questions.},
  langid = {english},
  organization = {{ZDNET}}
}
